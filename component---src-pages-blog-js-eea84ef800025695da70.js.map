{"version":3,"sources":["webpack:///./src/components/inlineSvg.js","webpack:///./src/components/link.js","webpack:///./src/components/hero.js","webpack:///./src/pages/blog.js"],"names":["InlineSvg","type","classes","className","width","height","viewBox","fill","xmlns","d","getSvg","Link","children","Hero","xs","Faqs","useState","data","pageInfo","pageName","id","title","noGutters","span","offset","allFile","edges","map","b","src","node","publicURL","variant"],"mappings":"oHA2BeA,EAzBG,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,KAAuB,IAAjBC,eAAiB,MAAT,GAAS,EAkB1C,OADAA,GAAW,cAET,yBAAKC,UAAWD,GAlBH,SAACD,GACd,OAAQA,GAEN,IAAK,cACH,OACE,yBAAKG,MAAM,KAAKC,OAAO,IAAIC,QAAQ,WAAWC,KAAK,OAAOC,MAAM,8BAC9D,0BAAMC,EAAE,ocACR,0BAAMA,EAAE,obAYbC,CAAOT,KCVCU,IATF,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACd,OACE,yBAAKT,UAAU,QACZS,EACD,kBAAC,EAAD,CAAWX,KAAK,cAAcC,QAAQ,mB,oCCP5C,iDAyCeW,IArCF,SAAC,GAAkB,IAAhBD,EAAe,EAAfA,SACd,OACE,kBAAC,IAAD,KAAK,kBAAC,IAAD,CAAKE,GAAI,GAAIX,UAAU,QAG1B,yBAAKA,UAAU,iBAEX,yBAAKA,UAAU,YACb,0BAAMA,UAAU,uBAChB,0BAAMA,UAAU,cAAhB,gCAKF,yBAAKA,UAAU,WACZS,IAKP,yBAAKT,UAAU,iBAEb,yBAAKA,UAAU,gBACb,0BAAMA,UAAU,QACd,0BAAMA,UAAU,uBADlB,SAMF,mC,wpBCkDOY,UAxEF,WAAO,IAAD,EACeC,mBAAS,IADxB,aAUWA,oBAAS,IAG/BC,GAbW,UAaP,QAcV,OACE,kBAAC,IAAD,CAAQC,SAAU,CAAEC,SAAU,QAAUC,GAAG,QACzC,kBAAC,IAAD,CAAKC,MAAM,SAEX,kBAAC,IAAD,KACE,yBAAKlB,UAAU,YAAf,oEACA,kBAAC,IAAD,mBAGF,kBAAC,IAAD,CAAKmB,WAAS,EAACF,GAAG,QAChB,kBAAC,IAAD,CAAKN,GAAI,CAACS,KAAM,GAAIC,OAAQ,GAAIrB,UAAU,UACxC,0BAAMA,UAAU,oBAAhB,eADF,UAICc,EAAKQ,QAAQC,MAAMC,KAAI,SAAAC,GAEtB,IAAMC,EAAMD,EAAEE,KAAKC,UACnB,OACE,kBAAC,IAAD,CAAKT,WAAS,EAACnB,UAAU,gBACvB,kBAAC,IAAD,CAAKW,GAAI,CAAES,KAAM,EAAGC,OAAQ,IAAK,kBAAC,IAAD,KAC/B,kBAAC,IAAD,CAAKV,GAAI,EAAGX,UAAU,cACpB,gCACE,yBAAK0B,IAAKA,MAGd,kBAAC,IAAD,CAAKf,GAAI,EAAGX,UAAU,gBACpB,yBAAKA,UAAU,cAAf,4DACA,yBAAKA,UAAU,iBAAf,yKACA,kBAAC,IAAD,yBAQV,kBAAC,IAAD,CAAKW,GAAI,GAAIX,UAAU,yBACrB,kBAAC,IAAD,CAAQ6B,QAAQ,gBAAhB","file":"component---src-pages-blog-js-eea84ef800025695da70.js","sourcesContent":["import React from \"react\"\n\nconst InlineSvg = ({ type, classes='' }) => {\n  const getSvg = (type) => {\n    switch (type) {\n      // declare stroke color in CSS, as defining here cannot be overridden\n      case 'right-arrow':\n        return (\n          <svg width=\"11\" height=\"7\" viewBox=\"0 0 11 7\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.4747 2.96005L10.4747 3.48131L0.633169 3.48131L0.633169 2.96005L5.55395 2.96005L7.14432 2.96005L8.84694 3.05313L8.84694 2.99728L8.5397 2.81167C8.05179 2.51692 7.63343 2.12011 7.31331 1.64846L7.1448 1.40018C6.93351 1.08888 6.76776 0.748994 6.65257 0.390824L6.52688 -1.71703e-07L7.93015 -1.10671e-07C7.93015 -1.10671e-07 8.03744 0.611831 8.22951 1.0053C8.30036 1.15044 8.38514 1.31314 8.47412 1.47836C8.8862 2.2435 9.62674 2.7699 10.4747 2.96005Z\"/>\n            <path d=\"M10.4747 4.05372L10.4747 3.46333L0.633169 3.46333L0.633169 4.05372L5.55395 4.05372L7.14432 4.05372L8.84694 3.96105L8.84694 4.01665L8.54041 4.201C8.05203 4.49471 7.63296 4.89057 7.31194 5.36144L7.14667 5.60385C6.93415 5.91556 6.76736 6.2561 6.65138 6.6151L6.52688 7.00049L7.93015 7.00049C7.93015 7.00049 8.03744 6.3914 8.22951 5.9997C8.29982 5.85632 8.38384 5.69573 8.47207 5.53255C8.88539 4.76818 9.62664 4.24303 10.4747 4.05372Z\"/>\n          </svg>\n        )\n    \n      default:\n        break;\n    }\n  }\n\n  classes += \" inline-svg\"\n  return (\n    <div className={classes}>\n      {getSvg(type)}\n    </div>\n  )\n}\n\nexport default InlineSvg\n","import React from \"react\"\nimport InlineSvg from \"./inlineSvg\"\n\nconst Link = ({ children }) => {\n  return (\n    <div className=\"link\">\n      {children}\n      <InlineSvg type='right-arrow' classes='right-arrow'></InlineSvg>\n    </div>\n  )\n}\n\nexport default Link\n","import React from \"react\"\n\nimport { Row, Col } from \"react-bootstrap\"\n\nconst Hero = ({ children }) => {\n  return (\n    <Row><Col xs={12} className=\"hero\">\n\n\n      <div className=\"color-section\">\n\n          <div className=\"branding\">\n            <span className=\"site-logo svg-base\"></span>\n            <span className=\"site-title\">\n              Community Resource Explorer\n            </span>\n          </div>\n\n          <div className=\"content\">\n            {children}\n          </div>\n\n      </div>\n\n      <div className=\"image-section\">\n\n        <div className=\"menu-section\">\n          <span className=\"menu\">\n            <span className=\"menu-icon svg-base\"></span>\n            Menu\n          </span>\n        </div>\n\n        <img />\n\n      </div>\n\n    </Col></Row>\n  )\n}\n\nexport default Hero\n","import React, { useState } from \"react\"\n// import { Link } from \"gatsby\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport { Accordion, Button, Card, Col, Row, Collapse } from \"react-bootstrap\"\nimport SEO from \"../components/seo\"\n// import { Link } from \"react-scroll\"\nimport Hero from \"../components/hero\"\nimport CustomLink from \"../components/link\"\n\nconst Faqs = () => {\n  const [expandedMap, setState] = useState({})\n\n  const toggleExpansion = (uid, expand) => {\n    setState({\n      ...expandedMap,\n      [uid]: expand\n    })\n  }\n\n  const [hidden, setHidden] = useState(false)\n  const toggleHidden = () => setHidden(!hidden)\n\n  const data = useStaticQuery(graphql`\n    {\n      allFile(filter: {extension: {eq: \"png\"}, relativeDirectory: {eq: \"blogEntries\"}}) {\n        edges {\n          node {\n            id\n            publicURL\n            name\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <Layout pageInfo={{ pageName: \"blog\" }} id=\"blog\">\n      <SEO title=\"Blog\" />\n\n      <Hero>\n        <div className=\"headline\">How weâ€™re informing policy and community understanding in Dallas</div>\n        <CustomLink>Read post</CustomLink>\n      </Hero>\n\n      <Row noGutters id=\"page\">\n        <Col xs={{span: 11, offset: 1}} className='recent'>\n          <span className=\"custom-underline\">Recent blog</span> posts\n        </Col>\n\n        {data.allFile.edges.map(b => {\n          // console.log(b)\n          const src = b.node.publicURL\n          return (\n            <Row noGutters className='post-section'>\n              <Col xs={{ span: 8, offset: 1 }}><Row>\n                <Col xs={6} className='post-image'>\n                  <figure>\n                    <img src={src} />\n                  </figure>\n                </Col>\n                <Col xs={6} className='post-details'>\n                  <div className='post-title'>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</div>\n                  <div className='post-contents'>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Urna vitae nulla pretium, cras tellus, at morbi tristique. Ac ipsum, egestas ligula duis ipsum pellentesque </div>\n                  <CustomLink>Read post</CustomLink>\n                </Col>\n\n              </Row></Col>\n            </Row>\n          )\n        })}\n\n        <Col xs={12} className=\"load-more text-center\">\n          <Button variant=\"outline-dark\">Load more posts</Button>\n        </Col>\n\n      </Row>\n    </Layout>\n  )\n}\n\nexport default Faqs\n"],"sourceRoot":""}