{"version":3,"sources":["webpack:///./src/consts.js","webpack:///./src/components/inlineSvg.js","webpack:///./src/components/hero.js","webpack:///./src/components/menu.js","webpack:///./src/pages/blog.js","webpack:///./src/components/customLink.js"],"names":["HOME","id","path","name","EXPLORER","ABOUT","ACTION","FAQ","CONTACT","pages","ISD","menuPages","InlineSvg","type","classes","className","width","height","viewBox","fill","xmlns","d","x1","y1","x2","y2","stroke","x","transform","y","getSvg","Hero","children","activePageId","xs","Menu","useState","menuOpen","setMenuOpen","toggleMenuOpen","onClick","noGutters","map","page","nameClasses","navigate","key","Faqs","data","pageInfo","pageName","title","navigateTo","underlined","span","offset","allFile","edges","b","src","node","publicURL","md","xl","variant","CustomLink"],"mappings":"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","file":"component---src-pages-blog-js-bb21cc43c3b95fe5dd3a.js","sourcesContent":["const HOME = {\n  id: 'home',\n  path: '/home',\n  name: 'Home',\n}\nconst EXPLORER = {\n  id: 'explorer',\n  path: '/explorer',\n  name: 'Explorer',\n}\nconst ABOUT = {\n  id: 'about',\n  path: '/about',\n  name: 'About',\n}\nconst ACTION = {\n  id: 'action',\n  path: '/action',\n  name: 'Explorer in Action',\n}\nconst FAQ = {\n  id: 'faq',\n  path: '/faqs',\n  name: 'FAQ&Methods',\n}\nconst CONTACT = {\n  id: 'contact',\n  path: '/contact',\n  name: 'Contact us',\n}\n\n// _________ non-menu pages ___\n// blog index?\n\nconst ISD = {\n  id: 'isd',\n  path: '/isd',\n  name: 'ISD'\n}\n\nconst pages = { HOME, EXPLORER, ABOUT, ACTION, FAQ, CONTACT, ISD }\nconst menuPages = [ HOME, EXPLORER, ABOUT, ACTION, FAQ, CONTACT ]\n\nexport {\n  pages,\n  menuPages\n}","import React from \"react\"\n\nconst InlineSvg = ({ type, classes = \"\" }) => {\n  const getSvg = type => {\n    switch (type) {\n      // declare stroke color in CSS, as defining here cannot be overridden\n      case \"right-arrow\":\n        return (\n          <svg\n            width=\"11\"\n            height=\"7\"\n            viewBox=\"0 0 11 7\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path d=\"M10.4747 2.96005L10.4747 3.48131L0.633169 3.48131L0.633169 2.96005L5.55395 2.96005L7.14432 2.96005L8.84694 3.05313L8.84694 2.99728L8.5397 2.81167C8.05179 2.51692 7.63343 2.12011 7.31331 1.64846L7.1448 1.40018C6.93351 1.08888 6.76776 0.748994 6.65257 0.390824L6.52688 -1.71703e-07L7.93015 -1.10671e-07C7.93015 -1.10671e-07 8.03744 0.611831 8.22951 1.0053C8.30036 1.15044 8.38514 1.31314 8.47412 1.47836C8.8862 2.2435 9.62674 2.7699 10.4747 2.96005Z\" />\n            <path d=\"M10.4747 4.05372L10.4747 3.46333L0.633169 3.46333L0.633169 4.05372L5.55395 4.05372L7.14432 4.05372L8.84694 3.96105L8.84694 4.01665L8.54041 4.201C8.05203 4.49471 7.63296 4.89057 7.31194 5.36144L7.14667 5.60385C6.93415 5.91556 6.76736 6.2561 6.65138 6.6151L6.52688 7.00049L7.93015 7.00049C7.93015 7.00049 8.03744 6.3914 8.22951 5.9997C8.29982 5.85632 8.38384 5.69573 8.47207 5.53255C8.88539 4.76818 9.62664 4.24303 10.4747 4.05372Z\" />\n          </svg>\n        )\n      case \"down-chevron\":\n        return (\n          <svg\n            width=\"13\"\n            height=\"13\"\n            viewBox=\"0 0 13 13\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <line\n              x1=\"0.354774\"\n              y1=\"5.88546\"\n              x2=\"6.59531\"\n              y2=\"12.126\"\n              stroke=\"#181818\"\n            />\n            <line\n              x1=\"5.88644\"\n              y1=\"12.1272\"\n              x2=\"12.127\"\n              y2=\"5.88662\"\n              stroke=\"#181818\"\n            />\n          </svg>\n        )\n      case \"x\":\n        return (\n          <svg\n            width=\"12\"\n            height=\"12\"\n            viewBox=\"0 0 12 12\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <rect\n              x=\"0.707031\"\n              width=\"15\"\n              height=\"1\"\n              transform=\"rotate(45 0.707031 0)\"\n            />\n            <rect\n              y=\"10.6064\"\n              width=\"15\"\n              height=\"1\"\n              transform=\"rotate(-45 0 10.6064)\"\n            />\n          </svg>\n        )\n\n      default:\n        break\n    }\n  }\n\n  classes += \" inline-svg \" + type\n  return <div className={classes}>{getSvg(type)}</div>\n}\n\nexport default InlineSvg\n","import React from \"react\"\n\nimport { Row, Col } from \"react-bootstrap\"\nimport Menu from \"./menu\"\n\nconst Hero = ({ children, activePageId }) => {\n  return (\n    <Row>\n      <Col xs={12} className=\"hero\">\n        <div className=\"color-section\">\n          <div className=\"branding\">\n            <span className=\"site-logo svg-base\"></span>\n            <span className=\"site-title\">Community Resource Explorer</span>\n          </div>\n\n          <div className=\"content\">{children}</div>\n        </div>\n\n        <div className=\"image-section\">\n          <div className=\"menu-section\">\n            <span className=\"site-logo-mobile svg-base\"></span>\n            <Menu activePageId={activePageId} />\n          </div>\n\n          <img className=\"hero-image\" />\n        </div>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Hero\n","import React, { useState } from \"react\"\n\nimport { Row, Col } from \"react-bootstrap\"\nimport { menuPages } from \"../consts\"\nimport { Link, navigate } from \"gatsby\"\nimport InlineSvg from \"./inlineSvg\"\n\nconst Menu = ({ activePageId }) => {\n  const [menuOpen, setMenuOpen] = useState(false)\n  const toggleMenuOpen = () => setMenuOpen(!menuOpen)\n\n  const getMenuPanel = () => {\n    return (\n      <Row noGutters className=\"menu-panel\">\n        <div className=\"logo\"></div>\n        <div className=\"close-menu\" onClick={toggleMenuOpen}>\n          <InlineSvg type=\"x\" />\n          Close\n        </div>\n        <Col className=\"dallas-isd\" xs={1}>\n          <span className=\"text\">DALLAS ISD</span>\n        </Col>\n\n        <Col className=\"menu-page-names-col\" xs={5}>\n          <div className=\"menu-page-names-container\">\n            {menuPages.map(page => {\n              const nameClasses =\n                \"menu-page-name\" + (page.id === activePageId ? \" active\" : \"\")\n              return (\n                <div\n                  onClick={() => navigate(page.path)}\n                  className={nameClasses}\n                  key={page.id}\n                >\n                  {page.name}\n                </div>\n              )\n            })}\n          </div>\n        </Col>\n        <Col className=\"equipped\">\n          <div className=\"text\">\n            <div>All Dallas neighborhoods</div>\n            <div>should be equipped to thrive.</div>\n          </div>\n        </Col>\n      </Row>\n    )\n  }\n\n  const classes = \"menu-component\" + (menuOpen ? \" open\" : \"\")\n\n  return (\n    <div className={classes}>\n      <span onClick={toggleMenuOpen} className=\"menu-icon-group\">\n        <span className=\"menu-icon svg-base\"></span>\n        Menu\n      </span>\n\n      {getMenuPanel()}\n    </div>\n  )\n}\n\nexport default Menu\n","import React, { useState } from \"react\"\n// import { Link } from \"gatsby\"\nimport { useStaticQuery, graphql, navigateTo } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport { Accordion, Button, Card, Col, Row, Collapse } from \"react-bootstrap\"\nimport SEO from \"../components/seo\"\n// import { Link } from \"react-scroll\"\nimport Hero from \"../components/hero\"\nimport CustomLink from \"../components/customLink\"\nimport { pages } from \"../consts\"\n\nconst Faqs = () => {\n  const [expandedMap, setState] = useState({})\n\n  const toggleExpansion = (uid, expand) => {\n    setState({\n      ...expandedMap,\n      [uid]: expand,\n    })\n  }\n\n  const [hidden, setHidden] = useState(false)\n  const toggleHidden = () => setHidden(!hidden)\n\n  const data = useStaticQuery(graphql`\n    {\n      allFile(\n        filter: {\n          extension: { eq: \"png\" }\n          relativeDirectory: { eq: \"blogEntries\" }\n        }\n      ) {\n        edges {\n          node {\n            id\n            publicURL\n            name\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <Layout pageInfo={{ pageName: \"blog\" }} id=\"blog\">\n      <SEO title=\"Blog\" />\n\n      {/* TODO: pages.BLOG.id */}\n      <Hero activePageId={null}>\n        <div className=\"headline\">\n          How we’re informing policy and community understanding in Dallas\n        </div>\n        <CustomLink\n          onClick={() => navigateTo(pages.ISD.path)}\n          underlined={false}\n        >Read post</CustomLink>\n      </Hero>\n\n      <Row noGutters id=\"page\">\n        <Col xs={{ span: 11, offset: 1 }} className=\"recent\">\n          <span className=\"custom-underline\">Recent blog</span> posts\n        </Col>\n\n        {data.allFile.edges.map(b => {\n          // console.log(b)\n          const src = b.node.publicURL\n          return (\n            <Row noGutters className=\"post-section\">\n              <Col\n                className=\"post-image\"\n                xs={{ span: 10, offset: 1 }}\n                md={{ span: 4, offset: 1 }}\n              >\n                <figure>\n                  <img src={src} />\n                </figure>\n              </Col>\n\n              <Col\n                className=\"post-details\"\n                xs={{ span: 10, offset: 1 }}\n                md={{ span: 6, offset: 0 }}\n                xl={{ span: 4, offset: 0 }}\n              >\n                <div className=\"post-title\">\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                </div>\n\n                <div className=\"post-contents\">\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Urna\n                  vitae nulla pretium, cras tellus, at morbi tristique. Ac\n                  ipsum, egestas ligula duis ipsum pellentesque{\" \"}\n                </div>\n\n                <CustomLink>Read post</CustomLink>\n              </Col>\n            </Row>\n          )\n        })}\n\n        <Col xs={12} className=\"load-more text-center\">\n          <Button variant=\"outline-dark\">Load more posts</Button>\n        </Col>\n      </Row>\n    </Layout>\n  )\n}\n\nexport default Faqs\n","import React from \"react\"\nimport InlineSvg from \"./inlineSvg\"\n\nconst CustomLink = ({ children, underlined = true, onClick }) => {\n  let classes = \"custom-link \"\n  if (underlined) {\n    classes += \" underlined\"\n  }\n\n  const handleClick = () => {\n    if (onClick) {\n      onClick()\n    }\n  }\n\n  return (\n    <div className={classes} onClick={handleClick}>\n      {children}\n      <InlineSvg type=\"right-arrow\" classes=\"right-arrow\"></InlineSvg>\n    </div>\n  )\n}\n\nexport default CustomLink\n"],"sourceRoot":""}